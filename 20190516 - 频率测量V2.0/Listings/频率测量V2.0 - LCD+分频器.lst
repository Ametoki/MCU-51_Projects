C51 COMPILER V9.56.0.0   ________V2_0___LCD_______                                         05/27/2019 13:54:56 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE ________V2_0___LCD_______
OBJECT MODULE PLACED IN .\Objects\∆µ¬ ≤‚¡øV2.0 - LCD+∑÷∆µ∆˜.obj
COMPILER INVOKED BY: C:\Program Files (x86)\keil\C51\BIN\C51.EXE ∆µ¬ ≤‚¡øV2.0 - LCD+∑÷∆µ∆˜.c OPTIMIZE(8,SPEED) BROWSE DE
                    -BUG OBJECTEXTEND PRINT(.\Listings\∆µ¬ ≤‚¡øV2.0 - LCD+∑÷∆µ∆˜.lst) TABS(2) OBJECT(.\Objects\∆µ¬ ≤‚¡øV2.0 - LCD+∑÷∆µ∆˜.obj)

line level    source

   1          //È¢ëÁéáÊµãÈáè + 1602AÊòæÁ§∫Â±è
   2          #include<regx52.h>
   3          #include<intrins.h>
   4          #define RS_CLR RS=0
   5          #define RS_SET RS=1
   6          #define RW_CLR RW=0
   7          #define RW_SET RW=1
   8          #define EN_CLR EN=0
   9          #define EN_SET EN=1
  10          #define DataPort SBUF
  11          sbit RS = P1^5;
  12          sbit RW = P1^6;
  13          sbit EN = P1^7;
  14          sbit ADD_A = P3^2;
  15          sbit ADD_B = P3^3;
  16          sbit ADD_C = P3^4;
  17          sbit Pulse = P3^5;
  18          bit Range_Mode, tag_flag = 0, dis_flag, first_flag;
  19          unsigned char code Char_Num[]="0123456789", Division[8] = {1, 2, 4, 8, 16, 32, 64, 128};
  20          unsigned char sum_flag, Dvs = 7, COM = 1;
  21          unsigned int Multi = 1800, t = 0;
  22          unsigned long int Fre[8] = {0}, temp, duty;
  23          double fre_temp, duty_temp;
  24          bit LCD_Check_Busy(void);
  25          void Timer_Init_H(void);
  26          void Timer_Init_L(void);
  27          void Init(void);
  28          void LCD_Clear(void);
  29          void LCD_Write_Com(unsigned char com);
  30          void LCD_Write_Data(unsigned char Data);
  31          void LCD_Write_String(unsigned char x, unsigned char y, unsigned char *s);
  32          void LCD_Write_Char(unsigned char x, unsigned char y, unsigned char Data);
  33          void LCD_Tag(void);
  34          void Display(void);
  35          void Delay(unsigned int xms);
  36          void main(void)
  37          {
  38   1        unsigned char i;
  39   1        Init();
  40   1        Timer_Init_H();
  41   1        Display();
  42   1        while(1)
  43   1        {
  44   2          if(t == 1200)
  45   2            LCD_Tag();
  46   2          if(!Range_Mode)
  47   2          {
  48   3            if(t == 5)
  49   3            {
  50   4              if(dis_flag)
  51   4              {
  52   5                if(!first_flag)
  53   5                  temp = Fre[sum_flag] * 8 * Division[Dvs];
  54   5                Display();
C51 COMPILER V9.56.0.0   ________V2_0___LCD_______                                         05/27/2019 13:54:56 PAGE 2   

  55   5              }
  56   4              if(Dvs)
  57   4              {
  58   5                if(Fre[sum_flag] > 3E4)
  59   5                {
  60   6                  if(Fre[sum_flag] > 6E4 && Dvs < 7)
  61   6                  {
  62   7                    Dvs++;
  63   7                    Timer_Init_H();
  64   7                  }
  65   6                  else
  66   6                  {
  67   7                    dis_flag = 1;
  68   7                    sum_flag++;
  69   7                  }
  70   6                }
  71   5                else
  72   5                {
  73   6                  if(Dvs > 0)
  74   6                    Dvs--;  
  75   6                  Timer_Init_H();
  76   6                }
  77   5              }
  78   4              else
  79   4              {
  80   5                if(Fre[sum_flag] >= 12)
  81   5                {
  82   6                  if(Fre[sum_flag] > 3E4)
  83   6                  {
  84   7                    if(Dvs < 7)
  85   7                      Dvs++;
  86   7                    Timer_Init_H();
  87   7                  }
  88   6                  else
  89   6                  {
  90   7                    dis_flag = 1;
  91   7                    sum_flag++;
  92   7                  }
  93   6                }
  94   5                else
  95   5                  Timer_Init_L();
  96   5              }
  97   4              if(sum_flag == 8)
  98   4              {
  99   5                sum_flag = 0;
 100   5                first_flag = 1;
 101   5              }
 102   4            }
 103   3          }
 104   2          else if(Range_Mode)
 105   2          {
 106   3            for(i = 0;i < 8;i++)
 107   3            {
 108   4              while(!Pulse);
 109   4              while(Pulse);
 110   4              TR0 = 1;
 111   4              while(!Pulse);
 112   4              duty_temp = (double)t * 256 + (double)TL0 - 4;
 113   4              while(Pulse);
 114   4              TR0 = 0;
 115   4              fre_temp = (double)t * 256 + (double)TL0 - 1;
 116   4              duty_temp /= fre_temp;
C51 COMPILER V9.56.0.0   ________V2_0___LCD_______                                         05/27/2019 13:54:56 PAGE 3   

 117   4              duty = (unsigned long int)(1E5 - duty_temp * 1E4 * 0.9936);
 118   4              fre_temp = 2304E7 / fre_temp;
 119   4              Fre[i] = (unsigned long int)fre_temp;
 120   4              if(Fre[i] >= 12E5)
 121   4              {
 122   5                Timer_Init_H();
 123   5                break;
 124   5              }
 125   4              if(!first_flag)
 126   4                temp = Fre[i] * 8;
 127   4              TH0 = 0;
 128   4              TL0 = 0;
 129   4              t = 0;
 130   4              Display();
 131   4              if(Fre[i] >= 2E5)
 132   4                Delay(100);
 133   4            }
 134   3            first_flag = 1;
 135   3          }
 136   2        }
 137   1      }
 138          void Init(void)
 139          {
 140   1        SCON = 0x00;
 141   1        LCD_Write_Com(0x38);
 142   1        Delay(COM);
 143   1        LCD_Write_Com(0x08);
 144   1        Delay(COM);
 145   1        LCD_Write_Com(0x06);
 146   1        Delay(COM);
 147   1        LCD_Clear();
 148   1        LCD_Write_Com(0x0C);
 149   1        Delay(COM);
 150   1        LCD_Write_String(0, 0, "FREQ:         Hz");
 151   1      }
 152          void Timer_Init_H(void)
 153          {
 154   1        unsigned char i;
 155   1        ADD_A = (bit)(Dvs & 0x01);
 156   1        ADD_B = (bit)(Dvs & 0x02);
 157   1        ADD_C = (bit)(Dvs & 0x04);
 158   1        TMOD = 0x52;
 159   1        TH0 = 0x80;
 160   1        TL0 = 0x80;
 161   1        TH1 = 0;
 162   1        TL1 = 0;
 163   1        t = 0;
 164   1        EA = 1;
 165   1        ET0 = 1;
 166   1        TR0 = 1;
 167   1        TR1 = 1;
 168   1        sum_flag = 0;
 169   1        first_flag = 0;
 170   1        dis_flag = 0;
 171   1        Range_Mode = 0;
 172   1        for(i = 0;i < 8;i++)
 173   1          Fre[i] = 0;
 174   1        LCD_Write_String(0, 1, "           ");
 175   1      }
 176          void Timer_Init_L(void)
 177          {
 178   1        unsigned char i;
C51 COMPILER V9.56.0.0   ________V2_0___LCD_______                                         05/27/2019 13:54:56 PAGE 4   

 179   1        TMOD = 0x02;
 180   1        TR0 = 0;
 181   1        TR1 = 0;
 182   1        TH0 = 0;
 183   1        TL0 = 0;
 184   1        ET0 = 1;
 185   1        EA = 1;
 186   1        t = 0;
 187   1        sum_flag = 0;
 188   1        first_flag = 0;
 189   1        dis_flag = 0;
 190   1        Range_Mode = 1;
 191   1        for(i = 0;i < 8;i++)
 192   1          Fre[i] = 0;
 193   1        LCD_Write_String(0, 1, "DUTY:");
 194   1        LCD_Write_String(10, 1, "%");
 195   1      }
 196          bit LCD_Check_Busy(void)
 197          {
 198   1        Delay(COM);
 199   1        return 0;
 200   1        /***
 201   1        RS_CLR;
 202   1        RW_SET;
 203   1        EN_CLR;
 204   1        _nop_();
 205   1        EN_SET;
 206   1        return (bit)(DataPort & 0x80);
 207   1        ***/
 208   1      }
 209          void LCD_Clear(void)
 210          {
 211   1        LCD_Write_Com(0x01);
 212   1        Delay(COM);
 213   1      }
 214          void LCD_Write_Com(unsigned char com)
 215          {
 216   1        while(LCD_Check_Busy());
 217   1        RS_CLR;
 218   1        RW_CLR;
 219   1        DataPort = com;
 220   1        while(!TI);
 221   1        TI = 0;
 222   1        EN_SET;
 223   1        _nop_();
 224   1        EN_CLR;
 225   1      }
 226          void LCD_Write_Data(unsigned char Data)
 227          {
 228   1        while(LCD_Check_Busy());
 229   1        RS_SET;
 230   1        RW_CLR;
 231   1        DataPort = Data;
 232   1        while(!TI);
 233   1        TI = 0;
 234   1        EN_SET;
 235   1        _nop_();
 236   1        EN_CLR; 
 237   1      }
 238          void LCD_Write_String(unsigned char x, unsigned char y, unsigned char *s)
 239          {
 240   1        if(y == 0)
C51 COMPILER V9.56.0.0   ________V2_0___LCD_______                                         05/27/2019 13:54:56 PAGE 5   

 241   1        {
 242   2          LCD_Write_Com(0x80 + x);
 243   2        }
 244   1        else
 245   1        {
 246   2          LCD_Write_Com(0xC0 + x);
 247   2        }
 248   1        while(*s)
 249   1        {
 250   2          LCD_Write_Data(*s);
 251   2          s++;
 252   2        }
 253   1      }
 254          void LCD_Write_Char(unsigned char x, unsigned char y, unsigned char Data)
 255          {
 256   1        if(y == 0)
 257   1        {
 258   2          LCD_Write_Com(0x80 + x);
 259   2        }
 260   1        else
 261   1        {
 262   2          LCD_Write_Com(0xC0 + x);
 263   2        }
 264   1        LCD_Write_Data(Data);
 265   1      }
 266          void Display(void)
 267          {
 268   1        unsigned char i;
 269   1        if(first_flag)
 270   1        {
 271   2          for(i = 0;i < 8;i++)
 272   2            temp += Fre[i];
 273   2          temp *= Division[Dvs];
 274   2        }
 275   1        for(i = 12;i >= 5;i--)
 276   1        {
 277   2          if(Range_Mode)
 278   2          {
 279   3            if(i == 7)
 280   3            {
 281   4              LCD_Write_String(i, 0, ".");
 282   4              LCD_Write_String(i, 1, ".");
 283   4              continue;
 284   4            }
 285   3            else if(i == 5)
 286   3            {
 287   4              if(temp)
 288   4                LCD_Write_Char(i, 0, Char_Num[temp % 10]);
 289   4              else if(!temp)
 290   4                LCD_Write_String(i, 0, " ");
 291   4              if(duty)
 292   4              {
 293   5                LCD_Write_Char(i, 1, Char_Num[duty % 10]);
 294   5                duty /= 10;
 295   5              }
 296   4              else if(!duty)
 297   4                LCD_Write_String(i, 0, " ");
 298   4            }
 299   3            else
 300   3            {
 301   4              LCD_Write_Char(i, 0, Char_Num[temp % 10]);
 302   4              if(i < 10)
C51 COMPILER V9.56.0.0   ________V2_0___LCD_______                                         05/27/2019 13:54:56 PAGE 6   

 303   4              {
 304   5                LCD_Write_Char(i, 1, Char_Num[duty % 10]);
 305   5                duty /= 10;
 306   5              }
 307   4            }
 308   3          }
 309   2          else
 310   2          {
 311   3            if(temp)
 312   3              LCD_Write_Char(i, 0, Char_Num[temp % 10]);
 313   3            else
 314   3              LCD_Write_Char(i, 0, Char_Num[10]);
 315   3          }
 316   2          temp /= 10;
 317   2        }
 318   1        temp = 0;
 319   1        duty = 0;
 320   1        dis_flag = 0;
 321   1      }
 322          void LCD_Tag(void)
 323          {
 324   1        if(tag_flag)
 325   1        {
 326   2          LCD_Write_String(12, 1, "CH:");
 327   2          tag_flag = 0;
 328   2        }
 329   1        else
 330   1        {
 331   2          LCD_Write_String(12, 1, "   ");
 332   2          tag_flag = 1;
 333   2        }
 334   1        LCD_Write_Char(15, 1, Char_Num[Dvs + 1]);
 335   1      }
 336          void Delay(unsigned int xms)        
 337          {
 338   1        unsigned int i,j;
 339   1        for(i = xms;i > 0;i--)
 340   1          for(j = 112;j > 0;j--);
 341   1      }
 342          void timer0(void) interrupt 1
 343          {
 344   1        t++;
 345   1        if(!Range_Mode)
 346   1        {
 347   2          if(t == Multi)
 348   2          {
 349   3            TR0 = 0;
 350   3            TR1 = 0;
 351   3            t = 0;
 352   3            Fre[sum_flag] = TH1 * 256 + TL1;
 353   3            TL0++;
 354   3            TH1 = 0;
 355   3            TL1 = 0;
 356   3            TR1 = 1;
 357   3            TR0 = 1;
 358   3          }
 359   2        }
 360   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1619    ----
C51 COMPILER V9.56.0.0   ________V2_0___LCD_______                                         05/27/2019 13:54:56 PAGE 7   

   CONSTANT SIZE    =     68    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     55      10
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      4    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
